import smtplib
import logging
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
from telegram import Bot
from telegram.error import TelegramError
from config import Config
from database import NotificationMethod

class NotificationService:
    """–°–µ—Ä–≤–∏—Å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    
    def __init__(self):
        self.logger = logging.getLogger(__name__)
        self.telegram_bot = None
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram –±–æ—Ç–∞ –µ—Å–ª–∏ —Ç–æ–∫–µ–Ω –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω
        if Config.TELEGRAM_BOT_TOKEN:
            try:
                self.telegram_bot = Bot(token=Config.TELEGRAM_BOT_TOKEN)
            except Exception as e:
                self.logger.error(f"–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram –±–æ—Ç–∞: {e}")
    
    def send_notification(self, user, reminder):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
        try:
            if reminder.notification_method == NotificationMethod.EMAIL:
                return self._send_email(user, reminder)
            elif reminder.notification_method == NotificationMethod.TELEGRAM:
                return self._send_telegram(user, reminder)
            elif reminder.notification_method == NotificationMethod.CONSOLE:
                return self._send_console(user, reminder)
            else:
                self.logger.error(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –º–µ—Ç–æ–¥ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {reminder.notification_method}")
                return False
        except Exception as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}")
            return False
    
    def _send_email(self, user, reminder):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"""
        if not user.email or not Config.EMAIL_USER or not Config.EMAIL_PASSWORD:
            self.logger.warning("Email –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏")
            return False
        
        try:
            msg = MIMEMultipart()
            msg['From'] = Config.EMAIL_USER
            msg['To'] = user.email
            msg['Subject'] = f"–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: {reminder.title}"
            
            body = f"""
            –ü—Ä–∏–≤–µ—Ç, {user.name}!
            
            –≠—Ç–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: {reminder.title}
            
            {reminder.message if reminder.message else ''}
            
            –í—Ä–µ–º—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: {reminder.reminder_time}
            """
            
            msg.attach(MIMEText(body, 'plain', 'utf-8'))
            
            server = smtplib.SMTP(Config.SMTP_SERVER, Config.SMTP_PORT)
            server.starttls()
            server.login(Config.EMAIL_USER, Config.EMAIL_PASSWORD)
            server.send_message(msg)
            server.quit()
            
            self.logger.info(f"Email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.name} ({user.email})")
            return True
            
        except Exception as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email: {e}")
            return False
    
    def _send_telegram(self, user, reminder):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"""
        if not user.telegram_id or not self.telegram_bot:
            self.logger.warning("Telegram –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏")
            return False
        
        try:
            message = f"""
üîî *–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: {reminder.title}*

{reminder.message if reminder.message else ''}

‚è∞ –í—Ä–µ–º—è: {reminder.reminder_time.strftime('%d.%m.%Y %H:%M')}
            """
            
            self.telegram_bot.send_message(
                chat_id=user.telegram_id,
                text=message,
                parse_mode='Markdown'
            )
            
            self.logger.info(f"Telegram —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.name}")
            return True
            
        except TelegramError as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ Telegram —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            return False
    
    def _send_console(self, user, reminder):
        """–í—ã–≤–æ–¥ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª—å"""
        try:
            print(f"\n{'='*50}")
            print(f"üîî –ù–ê–ü–û–ú–ò–ù–ê–ù–ò–ï")
            print(f"{'='*50}")
            print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.name}")
            print(f"–ó–∞–≥–æ–ª–æ–≤–æ–∫: {reminder.title}")
            if reminder.message:
                print(f"–°–æ–æ–±—â–µ–Ω–∏–µ: {reminder.message}")
            print(f"–í—Ä–µ–º—è: {reminder.reminder_time.strftime('%d.%m.%Y %H:%M')}")
            print(f"{'='*50}\n")
            
            self.logger.info(f"–ö–æ–Ω—Å–æ–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.name}")
            return True
            
        except Exception as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ –≤—ã–≤–æ–¥–∞ –≤ –∫–æ–Ω—Å–æ–ª—å: {e}")
            return False