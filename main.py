#!/usr/bin/env python3
"""
–ë–æ—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
–û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
"""

from datetime import datetime, timedelta
from reminder_bot import ReminderBot
from database import NotificationMethod

def create_sample_data(bot):
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–æ–≤ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"""
    print("–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–æ–≤ –¥–∞–Ω–Ω—ã—Ö...")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    user1_id = bot.add_user(
        name="–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤",
        email="ivan@example.com"
    )
    
    user2_id = bot.add_user(
        name="–ú–∞—Ä–∏—è –ü–µ—Ç—Ä–æ–≤–∞",
        telegram_id="@maria_p"
    )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
    now = datetime.now()
    
    # –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —á–µ—Ä–µ–∑ 1 –º–∏–Ω—É—Ç—É
    bot.add_reminder(
        user_id=user1_id,
        title="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ—á—Ç—É",
        message="–ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–±–æ—á—É—é –ø–æ—á—Ç—É",
        reminder_time=now + timedelta(minutes=1),
        notification_method=NotificationMethod.CONSOLE
    )
    
    # –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —á–µ—Ä–µ–∑ 2 –º–∏–Ω—É—Ç—ã
    bot.add_reminder(
        user_id=user2_id,
        title="–í—Å—Ç—Ä–µ—á–∞ —Å –∫–ª–∏–µ–Ω—Ç–æ–º",
        message="–í—Å—Ç—Ä–µ—á–∞ –≤ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü-–∑–∞–ª–µ –Ω–∞ 3 —ç—Ç–∞–∂–µ",
        reminder_time=now + timedelta(minutes=2),
        notification_method=NotificationMethod.CONSOLE
    )
    
    # –ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ
    bot.add_reminder(
        user_id=user1_id,
        title="–£—Ç—Ä–µ–Ω–Ω—è—è –∑–∞—Ä—è–¥–∫–∞",
        message="–í—Ä–µ–º—è –¥–ª—è —É—Ç—Ä–µ–Ω–Ω–∏—Ö —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π!",
        reminder_time=now + timedelta(minutes=3),
        notification_method=NotificationMethod.CONSOLE,
        is_recurring=True,
        recurring_interval="daily"
    )
    
    print("–ü—Ä–∏–º–µ—Ä—ã –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("=" * 50)
    print("ü§ñ –ë–û–¢ –ù–ê–ü–û–ú–ò–ù–ê–ù–ò–ô")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞
    bot = ReminderBot()
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        bot.initialize_database()
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–æ–≤ –¥–∞–Ω–Ω—ã—Ö (—Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
        response = input("–°–æ–∑–¥–∞—Ç—å –ø—Ä–∏–º–µ—Ä—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è? (y/n): ")
        if response.lower() == 'y':
            create_sample_data(bot)
        
        print("\n–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É...")
        print("–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
        print("-" * 50)
        
        # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
        bot.run()
        
    except KeyboardInterrupt:
        print("\n\n–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º. –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
    except Exception as e:
        print(f"\n–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        return 1
    
    return 0

if __name__ == "__main__":
    exit(main())